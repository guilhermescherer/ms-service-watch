name: Continuous Deployment

on:
  push:
    branches:
      - main
      - release

permissions:
  contents: read

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app.jar
          path: target/*.jar

  publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app.jar
          path: target

      - name: Setup Docker Build
        uses: docker/setup-buildx-action@v2.0.0

      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          username: guilhermescherer
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build and Publish
        uses: docker/build-push-action@v3.0.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: guilhermescherer/ms-service-watch:${{ github.ref_name }}

  deploy:
    name: Deploy EC2
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app.jar
          path: target

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "target/*.jar"
          target: "/home/${{ secrets.REMOTE_USER }}/app"

      - name: Run app on EC2 via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            export DATABASE_PORT=${{ secrets.DATABASE_PORT }}
            export DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            export DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            export DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            
            cd /home/${{ secrets.REMOTE_USER }}/app
            
            chmod +x *.jar

            pkill -f 'java.*.jar' || true

            nohup java -jar *.jar &
            
            
